@mixin button-base {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: var(--gap-xs);
    padding: var(--button-padding-y) var(--button-padding-x);
    border: none;
    border-radius: var(--button-radius);
    font: inherit;
    font-weight: var(--font-weight-medium);
    cursor: pointer;
    transition: var(--transition-colors), var(--transition-transform);
    text-decoration: none;
    user-select: none;

    &:disabled {
        opacity: var(--text-opacity-disabled);
        pointer-events: none;
    }
}

@mixin button-variant($surface-opacity: var(--surface-opacity-default)) {
    @include button-base;
    @include surface-interactive($surface-opacity);
    @include text-color(0);
}

@mixin card-base {
    display: grid;
    gap: var(--card-gap);
    padding: var(--card-padding);
    border-radius: var(--card-radius);
    transition: var(--transition-colors), var(--transition-transform);

    @include surface(var(--surface-opacity-muted));
}

@mixin input-base {
    display: block;
    inline-size: stretch;
    padding: var(--form-padding);
    border: 1px solid transparent;
    border-radius: var(--form-radius);
    font: inherit;
    outline: none;
    transition: var(--transition-colors);
    min-inline-size: 0;

    @include surface(var(--surface-opacity-muted));
    @include text-color(0);
}

@mixin panel-base {
    display: grid;
    gap: var(--gap-md);
    padding: var(--padding-xl);
    border-radius: var(--radius-lg);
    border: 1px solid;

    @include surface(var(--surface-opacity-muted));
    @include border-color(var(--surface-opacity-emphasis));
}

// =============================================================================
// UTILITY MIXINS
// =============================================================================

@mixin aspect-ratio($ratio: 1) {
    aspect-ratio: $ratio;

    // Fallback for browsers without aspect-ratio support
    @supports not (aspect-ratio: 1) {
        position: relative;

        &::before {
            content: "";
            display: block;
            padding-top: calc(100% / #{$ratio});
        }

        > * {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
        }
    }
}

@mixin backdrop-blur($strength: "default") {
    @if $strength =="subtle" {
        backdrop-filter: var(--backdrop-blur-subtle);
    }

    @else if $strength =="strong" {
        backdrop-filter: var(--backdrop-blur-strong);
    }

    @else {
        backdrop-filter: var(--backdrop-blur-default);
    }
}

@mixin glass-effect($shade: 0.0, $opacity: 0.04, $blur: true) {
    @include overlay-colorize("&", ("shade": $shade, "tint": 0.0, "opacity": $opacity, "enable-blur": $blur));
}

// =============================================================================
// COMPONENT-SPECIFIC MIXINS
// =============================================================================

@mixin toolbar-button {
    font-size: var(--font-sm);

    @include button-variant(var(--surface-opacity-default));
    @include layout.container("md") {
        span {
            display: none;
        }
    }
}

@mixin nav-item {
    @include layout.flex-between;
    padding: var(--nav-padding);
    border-radius: var(--nav-radius);
    @include surface-interactive(0);
    @include text-color(0);
    text-decoration: none;
    gap: var(--nav-gap);

    ui-icon {
        --icon-size: var(--icon-size-md);
        --icon-color: currentColor;
    }
}

@mixin accordion-base {
    border-radius: var(--radius-lg);
    @include surface(var(--surface-opacity-muted));
    overflow: hidden;
    transition: var(--transition-colors);

    &[open] {
        --color-shade: var(--surface-opacity-emphasis);
        @include border-color(0.12);
        border: 1px solid;
    }

    summary {
        @include layout.flex-between;
        padding: var(--padding-lg);
        cursor: pointer;
        list-style: none;
        font-weight: var(--font-weight-semibold);

        &::-webkit-details-marker {
            display: none;
        }
    }
}

@mixin empty-state {
    @include layout.grid-center;
    padding: var(--padding-2xl);
    border-radius: var(--radius-lg);
    @include surface(var(--surface-opacity-default));
    @include text-color(var(--text-tint-muted));
    border: 1px dashed oklch(from --c2-on-surface(var(--scrollbar-tint), var(--current, currentColor)) l c h / var(--border-opacity-dashed));
    text-align: center;
    min-block-size: var(--space-2xl);
}

// =============================================================================
// VALIDATION STATE MIXINS
// =============================================================================

@mixin validation-state($color, $border-opacity: var(--border-opacity-strong), $bg-opacity: 0.04) {
    border-color: oklch(from $color l c h / $border-opacity);
    background: oklch(from $color l c h / $bg-opacity);
}

@mixin validation-success {
    @include validation-state(var(--color-success));
}

@mixin validation-error {
    @include validation-state(var(--color-error));
    box-shadow: 0 0 0 3px oklch(from var(--color-error) l c h / 0.12);
}

@mixin validation-warning {
    @include validation-state(var(--color-warning));
}

// =============================================================================
// FONT MIXINS
// =============================================================================

// Utility mixins for common patterns
@mixin form-field-base($color-options: ()) {
    $resolved-options: _merge-color-options(("shade": 0.0, "tint": 0.0), $color-options);

    padding: var(--space-sm) var(--space-md);
    border-radius: var(--radius-md);
    outline: none;
    cursor: text;
    user-select: text;
    pointer-events: auto;
    inline-size: stretch;
    max-inline-size: stretch;
    field-sizing: content;

    //
    @include solid-colorize("&", $resolved-options);
    @include typography.font-style("&");

    & {
        border-width: 0px;
    }

    &:where(select) {
        user-select: none;
    }
}

@mixin button-base($color-options: ()) {
    $resolved-options: _merge-color-options(("shade": 0.0, "tint": 0.0), $color-options);

    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: var(--space-sm);
    padding: var(--space-sm) var(--space-md);
    border-radius: var(--radius-md);
    border: none;
    cursor: pointer;
    pointer-events: auto;
    block-size: max-content;
    inline-size: max-content;
    max-inline-size: stretch;
    line-height: normal;

    @include solid-colorize("&", $resolved-options);
    @include typography.font-style("&");
}
