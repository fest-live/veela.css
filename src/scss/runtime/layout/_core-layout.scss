@use "./Mixins" as mx;

//
@layer ux-agate {
    @media screen {
        :root, :host, :scope, :where(body) {
            pointer-events: auto;

            //
            transition-behavior: allow-discrete;
            interpolate-size: allow-keywords;
            content-visibility: auto;

            //
            --keyboard-inset-bottom: calc(max(env(keyboard-inset-bottom, 0px), 0px) / max(var(--zoom, 1), 0.125));
            --keyboard-inset-height: calc(max(env(keyboard-inset-height, 0px), 0px) / max(var(--zoom, 1), 0.125));
        }

        //
        :root, :where(html) {
            translate: 0px 0px !important;
            transform: none !important;
            margin: 0px !important;
            padding: 0px !important;
            border: none 0px transparent !important;
            outline: none 0px transparent !important;

            //
            background-color: transparent;
            container-type: normal;
            container-name: html root;
            contain: none;
            overflow: visible;
            position: fixed;
            inset: 0px;
            inset-block-end: auto;

            //
            min-inline-size: 100dvi;
            min-block-size: 100dvb;

            //
            inline-size: 100%;
            block-size: 100%;

            //
            max-inline-size: var(--screen-width, 100dvi) !important;
            max-block-size: var(--screen-height, 100dvb) !important;

            //
            place-content: start;
            place-items: start;
            place-self: start;

            //
            line-height: 0;
            flex-direction: column;
            display: flex;
        };

        //
        :where(body) {

            //
            & {
                translate: 0px 0px !important;
                transform: none !important;
                margin: 0px !important;

                //
                font-size: 0.9rem;

                //
                overflow: visible;
                position: relative;
                pointer-events: auto;
                inset: 0px;

                //
                display: inline flex;
                place-content: start;
                place-items: start;
                place-self: start;

                //
                background-color: var(--theme-base-color, transparent);

                // if needs viewport
                container-name: body;
                container-type: normal;
                contain: none;

                //
                min-inline-size: 100dvi;
                min-block-size: 100dvb;

                //
                inline-size: 100%;
                block-size: 100%;

                //
                max-inline-size: var(--screen-width, 100dvi) !important;
                max-block-size: var(--screen-height, 100dvb) !important;
            }

            //
            & > :where(*) {
                /*display: grid;
                place-self: safe center;
                grid-column: 1 / 1 span;
                grid-row: 1 / 1 span;*/

                //
                inline-size: 100%;
                block-size: 100%;

                //
                max-inline-size: min(var(--screen-width, 100dvi), 100%) !important;
                max-block-size: min(var(--screen-height, 100dvb), 100%) !important;

                //
                overflow: auto;
            }
        }

        //
        ui-window-frame, ui-modal, .ui-grid-item {
            & {
                isolation: isolate;
                content-visibility: auto;
                transform-origin: 50% 50%;
                transform-style: flat;
                transform-box: fill-box;
                transform:
                    mx.perfect-translate(var(--translate-x, 0%), var(--translate-y, 0%))
                    scale3d(var(--scale, 1), var(--scale, 1), 1);
                translate: 0% 0% 0%;
                opacity: var(--opacity, 1);
                rotate: 0deg;
                scale: 1;

                //
                --opacity: 1;
                --scale: 1;
                --rotate: 0deg;
                --translate-x: 0%;
                --translate-y: 0%;
            };
        };

        //
        .ui-orientbox {
            @include mx.compute_os_conditions;
            @include mx.compute_cs_size_to_os;
            @include mx.compute_from_os_to_cs;

            //
            & {
                --cs-size-x: 100cqi;
                --cs-size-y: 100cqb;

                //
                position: relative;
                container-type: size !important;
                contain: strict !important;
                background-color: transparent;
                inset: 0px;

                //
                grid-column: 1 / -1;
                grid-row: 1 / -1;
                place-self: start;

                //
                min-inline-size: 1px;
                min-block-size: 1px;
                inline-size: 100%;
                block-size: 100%;
                max-inline-size: 100%;
                max-block-size: 100%;
                pointer-events: none;

                //
                zoom: max(var(--zoom, 1), 0.125);
                font-size: 16px;

                //
                writing-mode: horizontal-tb !important;
                direction: ltr !important;

                //
                max-inline-size: min(var(--screen-width, 100dvi), 100%) !important;
                max-block-size: min(var(--screen-height, 100dvb), 100%) !important;
            }

            // by default, won't support rtl/vertical
            /*:where(*) {
                writing-mode: inherit;
                direction: inherit;
            }*/

            //
            & {
                //
                --zoom: max(var(--scaling, 1), 0.125);
                --zpx: calc(1px / max(var(--zoom, 1), 0.125));
                --ppx: calc(1px / max(var(--pixel-ratio, 1), 0.125));
            }

            //
            & > :where(*),
            & :where(ui-frame, .u2-grid-item, ui-modal, [is="ui-orientbox"], [is="ui-gridbox"], [is="ui-orientbox"] > :where(*), [is="ui-gridbox"] > :where(*), .ui-gridlayout, .ui-gridlayout > :where(*))
            {
                @include mx.compute_os_conditions;
                @include mx.compute_cs_size_to_os;
                @include mx.compute_from_os_to_cs;
            }

            //
            .center-self {
                @include mx.use-inset;
                @include mx.centered-with-offset();
            }

            //
            .fixed { @include mx.use-inset; position: fixed !important; }
            .absolute { @include mx.use-inset; position: absolute !important; }
        }

        //
        :root, :where(html) {
            background-color: transparent;
            container-type: size;
            container-name: html root !important;
            contain: none;
            overflow: visible;
            position: fixed;
            inset: 0px;
            inset-block-end: auto;
        }

        //
        :where(body) {
            @include mx.fit-viewport();

            //
            & {
                overflow: visible;
                position: relative !important;
                background-color: transparent;
                inset: auto !important;
                inset-block-end: max(env(titlebar-area-height, 0px), 0px) !important;
                container-type: normal;
                place-content: start;
                place-items: start;
                place-self: start;
                contain: none;
            }
        };

        //
        .native-portrait-optimized {
            @include mx.oriented(--in-swap-cond, 0, 1);
        };

    };

};
