@use "../../lib/mixins/rendering" as ps;

//
@layer u2-normalize {

    //
    @layer ux-agate;
    @media screen {
        :root, :where(html) {

            //
            &, :where(body) {
                padding: 0px;
                margin: 0px;
                inset: 0px;
                border: none 0px transparent;
                background-color: transparent;
                @include ps.HQRendering();
            }

            //
            :where(body, button, html, :root) { font-family: "InterVariable", "Inter", 'Open Sans', 'Gill Sans Nova', Ubuntu, 'DejaVu Sans', Candara, Segoe, "Segoe UI", Optima, source-sans-pro, sans-serif; }
        }

        //
        :host, :scope, :root {
            & > :where(*) {
                background-color: transparent;
                background-image: none;
                mask-image: none;
            }

            //
            & :where(*), &::slotted(*) {
                transition-behavior: allow-discrete;
                interpolate-size: allow-keywords;
                box-sizing: border-box;
            }

            /*
            & :where(button) {
                --light-btn-color: oklch(from currentColor calc(max(l, 0.8)) c h);
                --dark-btn-color: oklch(from currentColor calc(l * 0.6) c h);
                background-color: light-dark(var(--light-btn-color), var(--dark-btn-color));
            }*/

            // if there is nothing, why there is needs content?
            :where(img, video, audio, picture, canvas) { content-visibility: auto; }
            :where(h1, h2, h3, h4, h5, h6, p, form, label, button) { content-visibility: auto; }
            :where(div, span, a, h1, h2, h3, h4, h5, h6, p, label, form):empty { content-visibility: hidden; }

            //
            :where(ui-window-frame, ui-modal, .ui-grid-item):active,
            :where(ui-icon, label, form)
            [data-dragging], [data-hidden]
            {
                will-change: inset, translate, transform, opacity, z-index;
                //transform: translateZ(0px);

                // browsers support died... huge lag when transition state.
                //@include ps.LQRendering();
            };

            //
            :where(ui-icon::before) {
                @include ps.LQRendering();
            }

            //
            :where(head, script, link, style, meta) { display: none !important; user-select: none !important; pointer-events: none !important; }

            // optimize effects
            [data-hidden] { content-visibility: auto; filter: none !important; backdrop-filter: none !important; };
            [data-dragging] * { backdrop-filter: none !important; user-select: none !important; /*pointer-events: none !important;*/ };
            [data-dragging], [data-hidden] { backdrop-filter: none !important; user-select: none !important; };
            //:has([data-dragging]) * { user-select: none !important; };
            //content-visibility: auto;

            //
            [data-hidden] {
                opacity: var(--opacity, 0);
            }

            //
            :where([inert], *[inert]) {
                pointer-events: none !important;
                user-select: none !important;
                touch-action: none !important;
            }

            //
            @media (prefers-reduced-motion: reduce) {
                :where(*),
                ::after,
                ::before {
                    animation-delay: -1ms !important;
                    animation-duration: 1ms !important;
                    animation-iteration-count: 1 !important;
                    background-attachment: initial !important;
                    scroll-behavior: auto !important;
                    transition-delay: 0s !important;
                    transition-duration: 0s !important;
                }
            }

            //
            :where(*) {
                -webkit-user-select: none;
                -khtml-user-select: none;
                -moz-user-select: none;
                -o-user-select: none;
                -ms-user-select: none;
                user-select: none;

                //
                -webkit-tap-highlight-color: transparent;
                -moz-tap-highlight-color: transparent;
            }

            //
            [aria-hidden="true"] { display: none !important; }

            //
            :where(img, picture, span, a, button, input, svg, video, canvas) {
                -webkit-user-drag: none;
                -khtml-user-drag: none;
                -moz-user-drag: none;
                -o-user-drag: none;
                -ms-user-drag: none;
                user-drag: none;
                user-select: none;
            }

            //
            :where(picture) { display: contents; }
            :where(picture, canvas, img, video) {
                user-select: none;
                overflow: hidden;
                //pointer-events: none;
            }

            //
            :dir(rtl) :where(*), :where(*):dir(rtl) { direction: rtl; }
            :dir(ltr) :where(*), :where(*):dir(ltr) { direction: ltr; }

            //
            :where(button) {
                display: flex;
                place-items: center;
                place-content: center;

                //
                cursor: pointer;
                pointer-events: auto;

                //
                margin: 0px;
                padding: 0px;

                //
                border: none 0px transparent;
                outline: none 0px transparent;

                //
                line-height: 0px;
            }

            //
            :where(a, span) {
                text-decoration: none;
                background-color: transparent;
                place-content: center;
                place-items: center;
                justify-content: start;
            }

            // relative by default
            :where(label) { position: relative; & > input:where([type="radio"], [type="checkbox"]) { display: none; pointer-events: none; } }
            :where(.space, flex-space) {
                flex-grow: 1;
                flex-shrink: 0;
            }

            //
            :where(.break, flex-break, br) {
                flex-basis: 100%;
                flex-grow: 1;
                flex-shrink: 0;
            }

            // able to select inputs when edit
            :where(input[type="text"], input[type="number"]) {
                user-select: text;
                cursor: text;

                &:disabled {
                    user-select: none;
                    cursor: default;
                    pointer-events: none;
                }
            }

            //
            //.ui-icon { background-color: var(--ui-icon-color, currentColor); }
            input, button { accent-color: currentColor; };

            //
            *:not(:defined) { display: none; }
        }
    };
};
